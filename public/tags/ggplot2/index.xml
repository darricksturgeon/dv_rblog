<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Darrick Sturgeon</title>
    <link>/tags/ggplot2/</link>
    <description>Recent content in Ggplot2 on Darrick Sturgeon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 14 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>American Brewing: IBUs and ABV</title>
      <link>/blog/american-brewing-ibus-and-abv/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/american-brewing-ibus-and-abv/</guid>
      <description>beer &amp;lt;- read_csv(&amp;quot;/home/datys/Downloads/beers.csv&amp;quot;) ## Warning: Missing column names filled in: &amp;#39;X1&amp;#39; [1] ## Parsed with column specification: ## cols( ## X1 = col_integer(), ## abv = col_double(), ## ibu = col_double(), ## id = col_integer(), ## name = col_character(), ## style = col_character(), ## brewery_id = col_integer(), ## ounces = col_double() ## ) popular_beers &amp;lt;- beer %&amp;gt;% filter(style %in% c(&amp;quot;American IPA&amp;quot;, &amp;quot;American Brown Ale&amp;quot;, &amp;quot;American Porter&amp;quot;, &amp;quot;American Pale Ale (APA)&amp;quot;, &amp;quot;Witbier&amp;quot;, &amp;quot;American Amber / Red Ale&amp;quot;, &amp;quot;American Blond Ale&amp;quot;)) %&amp;gt;% filter(!</description>
    </item>
    
    <item>
      <title>American Brewing: IBUs and ABV</title>
      <link>/post/american-brewing-ibus-and-abv/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/american-brewing-ibus-and-abv/</guid>
      <description>beer &amp;lt;- read_csv(&amp;quot;/home/datys/Downloads/beers.csv&amp;quot;) ## Warning: Missing column names filled in: &amp;#39;X1&amp;#39; [1] ## Parsed with column specification: ## cols( ## X1 = col_integer(), ## abv = col_double(), ## ibu = col_double(), ## id = col_integer(), ## name = col_character(), ## style = col_character(), ## brewery_id = col_integer(), ## ounces = col_double() ## ) popular_beers &amp;lt;- beer %&amp;gt;% filter(style %in% c(&amp;quot;American IPA&amp;quot;, &amp;quot;American Brown Ale&amp;quot;, &amp;quot;American Porter&amp;quot;, &amp;quot;American Pale Ale (APA)&amp;quot;, &amp;quot;Witbier&amp;quot;, &amp;quot;American Amber / Red Ale&amp;quot;, &amp;quot;American Blond Ale&amp;quot;)) %&amp;gt;% filter(!</description>
    </item>
    
    <item>
      <title>Gapminder: Continental Life Expectancies</title>
      <link>/blog/gapminder-continental-life-expectancies/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/gapminder-continental-life-expectancies/</guid>
      <description>Here we take a look at countries with low life expectancy across continents.
gapm &amp;lt;- gapminder gapm_lifeexp &amp;lt;- gapm %&amp;gt;% group_by(year, continent) %&amp;gt;% filter(lifeExp &amp;lt;= quantile(lifeExp, .25)) %&amp;gt;% arrange(continent, year, lifeExp) gapm_lifeexp &amp;lt;- gapm_lifeexp %&amp;gt;% filter(continent != &amp;#39;Oceania&amp;#39;) ggplot(gapm_lifeexp, aes(x = year, y = lifeExp, color = continent)) + geom_point(alpha = 0.2) + geom_smooth(method = &amp;#39;lm&amp;#39;, se = FALSE, alpha = 1) + scale_color_brewer(type = &amp;#39;qual&amp;#39;, palette = 2) Type of Graph This is a scatter plot with linear fit lines.</description>
    </item>
    
    <item>
      <title>Gapminder: GDP Per Capita</title>
      <link>/blog/gapminder-gdp-per-capita/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/gapminder-gdp-per-capita/</guid>
      <description>Here we take a look at country GDP per capita across different continents from 1950 to present.
gapm &amp;lt;- gapminder gapm_gdpextrema &amp;lt;- gapm %&amp;gt;% group_by(continent, year) %&amp;gt;% filter(gdpPercap == max(gdpPercap) | gdpPercap == min(gdpPercap)) %&amp;gt;% mutate(extrema = factor(case_when(gdpPercap == max(gdpPercap) ~ &amp;#39;max&amp;#39;, gdpPercap == min(gdpPercap) ~ &amp;#39;min&amp;#39;))) %&amp;gt;% arrange(continent, country, year, gdpPercap) gapm_gdpextrema_notasia &amp;lt;- gapm_gdpextrema %&amp;gt;% filter(continent != &amp;#39;Asia&amp;#39;) gapm_gdpextrema_asia &amp;lt;- gapm_gdpextrema %&amp;gt;% filter(continent == &amp;#39;Asia&amp;#39;) p1 &amp;lt;- ggplot(gapm_gdpextrema_notasia, aes(x = year, y = gdpPercap, color = continent)) + geom_point(alpha = 0.</description>
    </item>
    
  </channel>
</rss>