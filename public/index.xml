<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Darrick Sturgeon</title>
    <link>/</link>
    <description>Recent content on Darrick Sturgeon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 17 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GMMs: visualization using PCA</title>
      <link>/blog/gmms-visualization-using-pca/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/gmms-visualization-using-pca/</guid>
      <description>data &amp;lt;- iris[, !(names(iris) %in% c(&amp;#39;Species&amp;#39;))] set.seed(7) mvn &amp;lt;- mvnormalmixEM(data, k = 3) number of iterations= 55  pca &amp;lt;- prcomp(data, scale=TRUE, center=TRUE) comps &amp;lt;- data.frame(pca$x) colnames(comps) &amp;lt;- c(&amp;#39;pc1&amp;#39;, &amp;#39;pc2&amp;#39;, &amp;#39;pc3&amp;#39;, &amp;#39;pc4&amp;#39;) comps$Species &amp;lt;- iris$Species tmp &amp;lt;- as.data.frame(mvn$posterior) %&amp;gt;% mutate(cls=apply(.[,], 1, function(x) names(x)[which.max(x)])) %&amp;gt;% select(cls) comps$cls &amp;lt;- tmp$cls comps &amp;lt;- comps %&amp;gt;% mutate(cls = factor(cls)) comps &amp;lt;- comps %&amp;gt;% mutate(correct = case_when(Species == &amp;#39;setosa&amp;#39; &amp;amp; cls == &amp;#39;comp.1&amp;#39; ~ TRUE, Species == &amp;#39;versicolor&amp;#39; &amp;amp; cls == &amp;#39;comp.</description>
    </item>
    
    <item>
      <title>GMMs: visualization using PCA</title>
      <link>/projects/gmms-visualization-using-pca/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/projects/gmms-visualization-using-pca/</guid>
      <description>data &amp;lt;- iris[, !(names(iris) %in% c(&amp;#39;Species&amp;#39;))] set.seed(7) mvn &amp;lt;- mvnormalmixEM(data, k = 3) number of iterations= 55  pca &amp;lt;- prcomp(data, scale=TRUE, center=TRUE) comps &amp;lt;- data.frame(pca$x) colnames(comps) &amp;lt;- c(&amp;#39;pc1&amp;#39;, &amp;#39;pc2&amp;#39;, &amp;#39;pc3&amp;#39;, &amp;#39;pc4&amp;#39;) comps$Species &amp;lt;- iris$Species tmp &amp;lt;- as.data.frame(mvn$posterior) %&amp;gt;% mutate(cls=apply(.[,], 1, function(x) names(x)[which.max(x)])) %&amp;gt;% select(cls) comps$cls &amp;lt;- tmp$cls comps &amp;lt;- comps %&amp;gt;% mutate(cls = factor(cls)) comps &amp;lt;- comps %&amp;gt;% mutate(correct = case_when(Species == &amp;#39;setosa&amp;#39; &amp;amp; cls == &amp;#39;comp.1&amp;#39; ~ TRUE, Species == &amp;#39;versicolor&amp;#39; &amp;amp; cls == &amp;#39;comp.</description>
    </item>
    
    <item>
      <title>xaringan-slides</title>
      <link>/slides/xaringan-slides/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/slides/xaringan-slides/</guid>
      <description>class: inverse, middle, center
Visualizing Clusters Darrick Sturgeon class: inverse
The Dataset We&amp;rsquo;re working on Iris
class: inverse
The Objective The goal is to see if clustering methods can tell us anything about our data. To do this, we will employ and visualize a Gaussian Mixture Model, as well as PCA.
This process and visualization can be effective in cases where the data:
 has or is expected to have class splits/boundaries.</description>
    </item>
    
    <item>
      <title>American Brewing: IBUs and ABV</title>
      <link>/blog/american-brewing-ibus-and-abv/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/american-brewing-ibus-and-abv/</guid>
      <description>beer &amp;lt;- read_csv(&amp;quot;/home/datys/Downloads/beers.csv&amp;quot;) popular_beers &amp;lt;- beer %&amp;gt;% filter(style %in% c(&amp;quot;American IPA&amp;quot;, &amp;quot;American Brown Ale&amp;quot;, &amp;quot;American Porter&amp;quot;, &amp;quot;American Pale Ale (APA)&amp;quot;, &amp;quot;Witbier&amp;quot;, &amp;quot;American Amber / Red Ale&amp;quot;, &amp;quot;American Blond Ale&amp;quot;)) %&amp;gt;% filter(!is.na(abv)) %&amp;gt;% filter(!is.na(ibu)) # I want to include several types of beer here, and include them in the same plot somehow. beerplot &amp;lt;-ggplot(popular_beers, aes(x = abv, y = ibu, color = style)) + geom_point() + theme(axis.text.x = element_text(angle = 30, hjust = 1)) + ggtitle(&amp;quot;ABV vs IBU in American IPAs&amp;quot;) + theme_bw() + scale_color_colorblind() beerplot Type of Graph This is a scatter plot.</description>
    </item>
    
    <item>
      <title>Gapminder: Continental Life Expectancies</title>
      <link>/blog/gapminder-continental-life-expectancies/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/gapminder-continental-life-expectancies/</guid>
      <description>Here we take a look at countries with low life expectancy across continents.
gapm &amp;lt;- gapminder gapm_lifeexp &amp;lt;- gapm %&amp;gt;% group_by(year, continent) %&amp;gt;% filter(lifeExp &amp;lt;= quantile(lifeExp, .25)) %&amp;gt;% arrange(continent, year, lifeExp) gapm_lifeexp &amp;lt;- gapm_lifeexp %&amp;gt;% filter(continent != &amp;#39;Oceania&amp;#39;) ggplot(gapm_lifeexp, aes(x = year, y = lifeExp, color = continent)) + geom_point(alpha = 0.2) + geom_smooth(method = &amp;#39;lm&amp;#39;, se = FALSE, alpha = 1) + scale_color_brewer(type = &amp;#39;qual&amp;#39;, palette = 2) Type of Graph This is a scatter plot with linear fit lines.</description>
    </item>
    
    <item>
      <title>Gapminder: GDP Per Capita</title>
      <link>/blog/gapminder-gdp-per-capita/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/gapminder-gdp-per-capita/</guid>
      <description>Here we take a look at country GDP per capita across different continents from 1950 to present.
gapm &amp;lt;- gapminder gapm_gdpextrema &amp;lt;- gapm %&amp;gt;% group_by(continent, year) %&amp;gt;% filter(gdpPercap == max(gdpPercap) | gdpPercap == min(gdpPercap)) %&amp;gt;% mutate(extrema = factor(case_when(gdpPercap == max(gdpPercap) ~ &amp;#39;max&amp;#39;, gdpPercap == min(gdpPercap) ~ &amp;#39;min&amp;#39;))) %&amp;gt;% arrange(continent, country, year, gdpPercap) gapm_gdpextrema_notasia &amp;lt;- gapm_gdpextrema %&amp;gt;% filter(continent != &amp;#39;Asia&amp;#39;) gapm_gdpextrema_asia &amp;lt;- gapm_gdpextrema %&amp;gt;% filter(continent == &amp;#39;Asia&amp;#39;) p1 &amp;lt;- ggplot(gapm_gdpextrema_notasia, aes(x = year, y = gdpPercap, color = continent)) + geom_point(alpha = 0.</description>
    </item>
    
    <item>
      <title>Housing Quality Ratings</title>
      <link>/blog/housing-quality-ratings/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/housing-quality-ratings/</guid>
      <description>Exploring the distribution of House Sale Prices by quality rating
violin &amp;lt;- ggplot(housing_numeric, aes(x = OverallQual, y = SalePrice, fill = OverallQual)) + geom_violin() + ggtitle(&amp;#39;Housing Sale Price By Quality Rating&amp;#39;) + scale_y_continuous(labels = comma) + xlab(&amp;#39;Quality&amp;#39;) + ylab(&amp;#39;Sale Price ($)&amp;#39;) + theme_bw() + labs(fill = &amp;quot;Quality&amp;quot;) violin + geom_boxplot(width=0.1) Violin Plots Violin plots display a mirrored histogram or pdf of a dataset along the y-axis, typically separated by category to show how the historgram changes across a factor variable.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Darrick Sturgeon Work I work full-time as a Senior Research Assistant in a Neuroimaging lab at OHSU, with an emphasis on image processing. I oversee and advise on a number of tailored MRI processing pipelines on macaques, rodents, and both human adults and neonates. In addition to image processing, I also assist with software and computational problems, such as designing secure ETL pipelines for medical research databases and implementing software for stastical/machine learning analyses on neuroimaging data.</description>
    </item>
    
    <item>
      <title>Example article</title>
      <link>/blog/example-article/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/blog/example-article/</guid>
      <description>Text This is some text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut pretium at ipsum eu pharetra. Proin ac ante et leo ultrices bibendum. Vivamus id ipsum fermentum, aliquam nunc mollis, tempus sapien. Praesent scelerisque cursus eros vitae pretium. Etiam sit amet ligula in leo euismod malesuada. Proin eleifend pulvinar ipsum, eu lobortis ante pharetra eu. Vivamus sem elit, venenatis eget ornare nec, ullamcorper non tellus. Duis quis massa finibus, euismod erat quis, fermentum nunc.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/hello-r-markdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/blog/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blog/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title></title>
      <link>/slides/2018-06-16-xaringan-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/2018-06-16-xaringan-slides/</guid>
      <description>xaringan-slides   class: center, middle, inverse, title-slide # xaringan-slides ### Darrick Sturgeon ### 2018-06-16 --- class: inverse, middle, center # Visualizing Clusters ### Darrick Sturgeon --- class: inverse # The Dataset We&#39;re working on Iris --- class: inverse # The Objective The goal is to see if clustering methods can tell us anything about our data. To do this, we will employ and visualize a Gaussian Mixture Model, as well as PCA.</description>
    </item>
    
    <item>
      <title>Home</title>
      <link>/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/home/</guid>
      <description>This is the home page. It will display the blog section if there is one, and a text before.
Hey ! Welcome to the Cocoa Enhanced theme. Here are some articles :</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/license/</guid>
      <description>You can use this page to put a license on the contents of your blog, like so:
 The MIT License (MIT)
Copyright &amp;copy; 2015 Nishanth Shanmughamnishanth.gerrard@gmail.com
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</description>
    </item>
    
    <item>
      <title>Visualizing Clusters</title>
      <link>/slides/xaringan-presi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/xaringan-presi/</guid>
      <description>class: inverse # The Dataset
I use the Iris dataset for this exercise.
Iris Dataset
 This dataset is a very nice dataset for clustering problems for reasons we’ll address next.
class: inverse # Clustering
Generally, clustering falls under the purvue of unsupervised machine learning. We want to see what ‘natural’ boundaries we can find to divide a dataset without telling it anything explicit about the classes we are looking for.</description>
    </item>
    
  </channel>
</rss>